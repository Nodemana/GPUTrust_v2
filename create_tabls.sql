create table users (
  id bigint primary key,
  name text
);

create table gpu_benchmarks (
  id bigint generated by default as identity primary key,
  user_id bigint references users(id),
  inserted_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null,
  uuid uuid not null,
  cuda_version text,
  driver_version text,
  gpu_name text,
  gpu_arch text,
  num_sm int8,
  vram_gb int8,
  fp16_flops float8,
  fp32_flops float8,
  fp64_flops float8,
  tensor_flops_fp16 float8,
  tensor_flops_bf16 float8,
  tensor_flops_tf32 float8,
  tensor_flops_int8 float8,
  tensor_flops_fp8 float8,
  d2d_mem_bandwidth float8,
  h2d_mem_bandwidth float8,
  d2h_mem_bandwidth float8,
  max_temp float8,
  avg_temp float8,
  max_pwr_draw float8,
  avg_pwr_draw float8
);

create table gpu_benchmark_runtime (
  id bigint generated by default as identity primary key,
  benchmark_id bigint references gpu_benchmarks(id) on delete cascade,
  captured_at timestamptz default timezone('utc', now()),
  interval_ms int,
  metrics jsonb
);

create index on gpu_benchmarks (user_id);
create index on gpu_benchmark_runtime (benchmark_id);
create index on gpu_benchmark_runtime (captured_at);
